name: Deploy to DEV S3
on:
  push:
    branches:
      - gha-deploy2s3

defaults:
  run:
    working-directory: .
    
jobs:
  build:
    name: Build Deploy To DEV S3
    environment: DEV
    runs-on: ubuntu-latest
    steps:
      - name: List contents
        run: |
          ls -lha

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.0.0

      - name: Install AWS CLI
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt-get update
          sudo DEBIAN_FRONTEND=noninteractive apt-get install -y awscli

      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_S3_BUCKET_REGION }}
          
      - name: Install deps, and build
        run: |
          yarn install
          yarn workspace @shiksha/common-lib build
          yarn install
          yarn build
        env:
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}
          REACT_APP_BASE_URL: ${{ secrets.REACT_APP_BASE_URL }}
          REACT_APP_SENTRY_DSN_URL: ${{ secrets.REACT_APP_SENTRY_DSN_URL }}
          REACT_APP_SENTRY_ENV: ${{ secrets.REACT_APP_SENTRY_ENV }}

      - name: List contents
        run: |
          ls -lha

      - name: Create Lerna Bundles
        run: |
          sh ./scripts/pack-prod-build.sh

      # - name: List Contents in prod-build
      #   run: |
      #     ls -R $GITHUB_WORKSPACE/prod-build

#       - name: Deploy
#         uses: reggionick/s3-deploy@v3
#         with:
#           folder: build
#           bucket: ${{ secrets.S3_BUCKET }}
#           bucket-region: ${{ secrets.S3_BUCKET_REGION }}
#           dist-id: ${{ secrets.AWS_DISTRIBUTION_PRODUCTION }}
#           invalidation: /*
#           delete-removed: true
#           no-cache: true
#           private: true
#           filesToInclude: prod-build/*

      # ### Invalidate Cloudfront
      # - name: Cloudfront Invalidation
      #   uses: chetan/invalidate-cloudfront-action@master
      #   env:
      #     DISTRIBUTION: ${{ secrets.AWS_DISTRIBUTION_PRODUCTION }}
      #     PATHS: '/*'
      #     AWS_REGION: ${{ secrets.AWS_S3_BUCKET_REGION }}
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # ### S3 sync
      # - name: Deploy to S3 Bucket
      #   run: |
      #     aws s3 sync ./prod-build/ s3://${{ secrets.AWS_S3_BUCKET }}

      ### S3 sync
      # - name: S3 Sync
      #   uses: jakejarvis/s3-sync-action@v0.5.1
      #   with:
      #     args: --acl public-read --follow-symlinks --delete
      #   env:
      #     AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: ${{ secrets.AWS_S3_BUCKET_REGION }}
      #     SOURCE_DIR: prod-build
      
      # - name: Configure Yarn Registry (HTTP)
      #   run: |
      #     yarn config set registry http://registry.yarnpkg.com/

      # - name: Install s3-sync-action
      #   run: |
      #     yarn global add jakejarvis/s3-sync-action@v0.5.1 || true
      
      # ## S3 sync
      # - name: S3 Sync
      #   run: |
      #     yarn global add jakejarvis/s3-sync-action@v0.5.1 || true
      #     export PATH="$(yarn global bin):$PATH"
      #     s3-sync-action --follow-symlinks --delete --exclude 'node_modules/**'
      #   env:
      #     AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: ${{ secrets.AWS_S3_BUCKET_REGION }}
      #     SOURCE_DIR: prod-build
    
      # ## S3 sync
      # - name: S3 Sync
      #   id: s3_sync
      #   run: |
      #     output=$(jakejarvis/s3-sync-action@v1 --acl public-read --follow-symlinks --delete 2> s3_sync_warnings.txt) || true
      #     echo "$output"
      #     echo "::set-output name=warning::$(cat s3_sync_warnings.txt)"
      #   env:
      #     AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: ${{ secrets.AWS_S3_BUCKET_REGION }}
      #     SOURCE_DIR: prod-build

      
      # ## Check for Warnings
      # - name: Check for Warnings
      #   if: steps.s3_sync.outputs.warning != ''
      #   run: |
      #     warning_output="${{ steps.s3_sync.outputs.warning }}"
      #     echo "Warnings detected: $warning_output"

      - name: AWS CLI S3 Sync
        run: |
          aws s3 sync prod-build s3://$AWS_S3_BUCKET --acl public-read --delete --region $AWS_REGION
        # env:
        #   AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
        #   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #   AWS_REGION: ${{ secrets.AWS_S3_BUCKET_REGION }}

      # - name: AWS CLI S3 Sync
      #   run: |
      #     aws s3 sync prod-build s3://$AWS_S3_BUCKET --acl public-read --delete --region $AWS_REGION
      #     SYNC_EXIT_CODE=$?
      #     if [ $SYNC_EXIT_CODE -ne 0 ]; then
      #       echo "AWS S3 Sync failed with exit code $SYNC_EXIT_CODE"
      #       exit $SYNC_EXIT_CODE
      #     fi
      #   env:
      #     AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     AWS_REGION: ${{ secrets.AWS_S3_BUCKET_REGION }}


      ### Invalidate Cloudfront
      - name: Cloudfront Invalidation
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ secrets.AWS_DISTRIBUTION_PRODUCTION }}
          PATHS: '/*'
          AWS_REGION: ${{ secrets.AWS_S3_BUCKET_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # ## Notify on Slack
      # - name: Notify on Slack channel
      #   uses: iRoachie/slack-github-actions@v2.3.2
      #   env:
      #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      #   with:
      #     status: ${{ job.status }}
      #   if: ${{ always() }}
